{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Capstone-aok"
		},
		"AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage'"
		},
		"Capstone Databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'Capstone Databricks'"
		},
		"CapstoneAOK_StorageAccount_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'CapstoneAOK_StorageAccount'"
		},
		"capstone_gov_aok_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'capstone_gov_aok'"
		},
		"CapstoneAOK_StorageAccount_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://capstoneaok.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/capstone_gov')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "rawtoclean",
						"description": "This notebook takes in data from the ADLS raw container using a fixed schema, adds the relevant columns and puts this data in the ADLS clean container and the Azure SQL DBs.",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/aoife.okane.hackett@avanade.com/capstone-gov/rawtoclean.ipynb"
						},
						"linkedServiceName": {
							"referenceName": "Capstone Databricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stage to Clean Junior",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "rawtoclean",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stage].[StageToCleanJr]"
						},
						"linkedServiceName": {
							"referenceName": "capstone_gov_aok",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stage to Clean Senior",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Stage to Clean Junior",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stage].[StageToCleanSr]"
						},
						"linkedServiceName": {
							"referenceName": "capstone_gov_aok",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Capstone Databricks')]",
				"[concat(variables('factoryId'), '/linkedServices/capstone_gov_aok')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capstone Databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4409505762668640.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('Capstone Databricks_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "7.3.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CapstoneAOK_StorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('CapstoneAOK_StorageAccount_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('CapstoneAOK_StorageAccount_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/capstone_gov_aok')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('capstone_gov_aok_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "capstone_gov",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2023-03-01T17:00:00Z",
						"timeZone": "UTC",
						"schedule": {}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/capstone_gov')]"
			]
		}
	]
}